/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as CadastroImport } from './routes/cadastro'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as SupervisorIndexImport } from './routes/supervisor/index'
import { Route as FuncionarioIndexImport } from './routes/funcionario/index'
import { Route as ClienteIndexImport } from './routes/cliente/index'
import { Route as AutoatendimentoIndexImport } from './routes/autoatendimento/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as SupervisorOperacoesImport } from './routes/supervisor/operacoes'
import { Route as SupervisorFuncionariosImport } from './routes/supervisor/funcionarios'
import { Route as FuncionarioVendasImport } from './routes/funcionario/vendas'
import { Route as FuncionarioPdvImport } from './routes/funcionario/pdv'
import { Route as FuncionarioCaixaImport } from './routes/funcionario/caixa'
import { Route as ClienteProdutosImport } from './routes/cliente/produtos'
import { Route as ClientePerfilImport } from './routes/cliente/perfil'
import { Route as ClientePedidosImport } from './routes/cliente/pedidos'
import { Route as ClienteLojaImport } from './routes/cliente/loja'
import { Route as ClienteCheckoutImport } from './routes/cliente/checkout'
import { Route as ClienteCarrinhoImport } from './routes/cliente/carrinho'
import { Route as ClienteCadastroImport } from './routes/cliente/cadastro'
import { Route as AdminVendasImport } from './routes/admin/vendas'
import { Route as AdminProdutosImport } from './routes/admin/produtos'
import { Route as AdminFuncionariosImport } from './routes/admin/funcionarios'
import { Route as AdminFinanceiroImport } from './routes/admin/financeiro'
import { Route as AdminConfiguracoesImport } from './routes/admin/configuracoes'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const CadastroRoute = CadastroImport.update({
  id: '/cadastro',
  path: '/cadastro',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SupervisorIndexRoute = SupervisorIndexImport.update({
  id: '/supervisor/',
  path: '/supervisor/',
  getParentRoute: () => rootRoute,
} as any)

const FuncionarioIndexRoute = FuncionarioIndexImport.update({
  id: '/funcionario/',
  path: '/funcionario/',
  getParentRoute: () => rootRoute,
} as any)

const ClienteIndexRoute = ClienteIndexImport.update({
  id: '/cliente/',
  path: '/cliente/',
  getParentRoute: () => rootRoute,
} as any)

const AutoatendimentoIndexRoute = AutoatendimentoIndexImport.update({
  id: '/autoatendimento/',
  path: '/autoatendimento/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const SupervisorOperacoesRoute = SupervisorOperacoesImport.update({
  id: '/supervisor/operacoes',
  path: '/supervisor/operacoes',
  getParentRoute: () => rootRoute,
} as any)

const SupervisorFuncionariosRoute = SupervisorFuncionariosImport.update({
  id: '/supervisor/funcionarios',
  path: '/supervisor/funcionarios',
  getParentRoute: () => rootRoute,
} as any)

const FuncionarioVendasRoute = FuncionarioVendasImport.update({
  id: '/funcionario/vendas',
  path: '/funcionario/vendas',
  getParentRoute: () => rootRoute,
} as any)

const FuncionarioPdvRoute = FuncionarioPdvImport.update({
  id: '/funcionario/pdv',
  path: '/funcionario/pdv',
  getParentRoute: () => rootRoute,
} as any)

const FuncionarioCaixaRoute = FuncionarioCaixaImport.update({
  id: '/funcionario/caixa',
  path: '/funcionario/caixa',
  getParentRoute: () => rootRoute,
} as any)

const ClienteProdutosRoute = ClienteProdutosImport.update({
  id: '/cliente/produtos',
  path: '/cliente/produtos',
  getParentRoute: () => rootRoute,
} as any)

const ClientePerfilRoute = ClientePerfilImport.update({
  id: '/cliente/perfil',
  path: '/cliente/perfil',
  getParentRoute: () => rootRoute,
} as any)

const ClientePedidosRoute = ClientePedidosImport.update({
  id: '/cliente/pedidos',
  path: '/cliente/pedidos',
  getParentRoute: () => rootRoute,
} as any)

const ClienteLojaRoute = ClienteLojaImport.update({
  id: '/cliente/loja',
  path: '/cliente/loja',
  getParentRoute: () => rootRoute,
} as any)

const ClienteCheckoutRoute = ClienteCheckoutImport.update({
  id: '/cliente/checkout',
  path: '/cliente/checkout',
  getParentRoute: () => rootRoute,
} as any)

const ClienteCarrinhoRoute = ClienteCarrinhoImport.update({
  id: '/cliente/carrinho',
  path: '/cliente/carrinho',
  getParentRoute: () => rootRoute,
} as any)

const ClienteCadastroRoute = ClienteCadastroImport.update({
  id: '/cliente/cadastro',
  path: '/cliente/cadastro',
  getParentRoute: () => rootRoute,
} as any)

const AdminVendasRoute = AdminVendasImport.update({
  id: '/admin/vendas',
  path: '/admin/vendas',
  getParentRoute: () => rootRoute,
} as any)

const AdminProdutosRoute = AdminProdutosImport.update({
  id: '/admin/produtos',
  path: '/admin/produtos',
  getParentRoute: () => rootRoute,
} as any)

const AdminFuncionariosRoute = AdminFuncionariosImport.update({
  id: '/admin/funcionarios',
  path: '/admin/funcionarios',
  getParentRoute: () => rootRoute,
} as any)

const AdminFinanceiroRoute = AdminFinanceiroImport.update({
  id: '/admin/financeiro',
  path: '/admin/financeiro',
  getParentRoute: () => rootRoute,
} as any)

const AdminConfiguracoesRoute = AdminConfiguracoesImport.update({
  id: '/admin/configuracoes',
  path: '/admin/configuracoes',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/cadastro': {
      id: '/cadastro'
      path: '/cadastro'
      fullPath: '/cadastro'
      preLoaderRoute: typeof CadastroImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/admin/configuracoes': {
      id: '/admin/configuracoes'
      path: '/admin/configuracoes'
      fullPath: '/admin/configuracoes'
      preLoaderRoute: typeof AdminConfiguracoesImport
      parentRoute: typeof rootRoute
    }
    '/admin/financeiro': {
      id: '/admin/financeiro'
      path: '/admin/financeiro'
      fullPath: '/admin/financeiro'
      preLoaderRoute: typeof AdminFinanceiroImport
      parentRoute: typeof rootRoute
    }
    '/admin/funcionarios': {
      id: '/admin/funcionarios'
      path: '/admin/funcionarios'
      fullPath: '/admin/funcionarios'
      preLoaderRoute: typeof AdminFuncionariosImport
      parentRoute: typeof rootRoute
    }
    '/admin/produtos': {
      id: '/admin/produtos'
      path: '/admin/produtos'
      fullPath: '/admin/produtos'
      preLoaderRoute: typeof AdminProdutosImport
      parentRoute: typeof rootRoute
    }
    '/admin/vendas': {
      id: '/admin/vendas'
      path: '/admin/vendas'
      fullPath: '/admin/vendas'
      preLoaderRoute: typeof AdminVendasImport
      parentRoute: typeof rootRoute
    }
    '/cliente/cadastro': {
      id: '/cliente/cadastro'
      path: '/cliente/cadastro'
      fullPath: '/cliente/cadastro'
      preLoaderRoute: typeof ClienteCadastroImport
      parentRoute: typeof rootRoute
    }
    '/cliente/carrinho': {
      id: '/cliente/carrinho'
      path: '/cliente/carrinho'
      fullPath: '/cliente/carrinho'
      preLoaderRoute: typeof ClienteCarrinhoImport
      parentRoute: typeof rootRoute
    }
    '/cliente/checkout': {
      id: '/cliente/checkout'
      path: '/cliente/checkout'
      fullPath: '/cliente/checkout'
      preLoaderRoute: typeof ClienteCheckoutImport
      parentRoute: typeof rootRoute
    }
    '/cliente/loja': {
      id: '/cliente/loja'
      path: '/cliente/loja'
      fullPath: '/cliente/loja'
      preLoaderRoute: typeof ClienteLojaImport
      parentRoute: typeof rootRoute
    }
    '/cliente/pedidos': {
      id: '/cliente/pedidos'
      path: '/cliente/pedidos'
      fullPath: '/cliente/pedidos'
      preLoaderRoute: typeof ClientePedidosImport
      parentRoute: typeof rootRoute
    }
    '/cliente/perfil': {
      id: '/cliente/perfil'
      path: '/cliente/perfil'
      fullPath: '/cliente/perfil'
      preLoaderRoute: typeof ClientePerfilImport
      parentRoute: typeof rootRoute
    }
    '/cliente/produtos': {
      id: '/cliente/produtos'
      path: '/cliente/produtos'
      fullPath: '/cliente/produtos'
      preLoaderRoute: typeof ClienteProdutosImport
      parentRoute: typeof rootRoute
    }
    '/funcionario/caixa': {
      id: '/funcionario/caixa'
      path: '/funcionario/caixa'
      fullPath: '/funcionario/caixa'
      preLoaderRoute: typeof FuncionarioCaixaImport
      parentRoute: typeof rootRoute
    }
    '/funcionario/pdv': {
      id: '/funcionario/pdv'
      path: '/funcionario/pdv'
      fullPath: '/funcionario/pdv'
      preLoaderRoute: typeof FuncionarioPdvImport
      parentRoute: typeof rootRoute
    }
    '/funcionario/vendas': {
      id: '/funcionario/vendas'
      path: '/funcionario/vendas'
      fullPath: '/funcionario/vendas'
      preLoaderRoute: typeof FuncionarioVendasImport
      parentRoute: typeof rootRoute
    }
    '/supervisor/funcionarios': {
      id: '/supervisor/funcionarios'
      path: '/supervisor/funcionarios'
      fullPath: '/supervisor/funcionarios'
      preLoaderRoute: typeof SupervisorFuncionariosImport
      parentRoute: typeof rootRoute
    }
    '/supervisor/operacoes': {
      id: '/supervisor/operacoes'
      path: '/supervisor/operacoes'
      fullPath: '/supervisor/operacoes'
      preLoaderRoute: typeof SupervisorOperacoesImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/autoatendimento/': {
      id: '/autoatendimento/'
      path: '/autoatendimento'
      fullPath: '/autoatendimento'
      preLoaderRoute: typeof AutoatendimentoIndexImport
      parentRoute: typeof rootRoute
    }
    '/cliente/': {
      id: '/cliente/'
      path: '/cliente'
      fullPath: '/cliente'
      preLoaderRoute: typeof ClienteIndexImport
      parentRoute: typeof rootRoute
    }
    '/funcionario/': {
      id: '/funcionario/'
      path: '/funcionario'
      fullPath: '/funcionario'
      preLoaderRoute: typeof FuncionarioIndexImport
      parentRoute: typeof rootRoute
    }
    '/supervisor/': {
      id: '/supervisor/'
      path: '/supervisor'
      fullPath: '/supervisor'
      preLoaderRoute: typeof SupervisorIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cadastro': typeof CadastroRoute
  '/login': typeof LoginRoute
  '/admin/configuracoes': typeof AdminConfiguracoesRoute
  '/admin/financeiro': typeof AdminFinanceiroRoute
  '/admin/funcionarios': typeof AdminFuncionariosRoute
  '/admin/produtos': typeof AdminProdutosRoute
  '/admin/vendas': typeof AdminVendasRoute
  '/cliente/cadastro': typeof ClienteCadastroRoute
  '/cliente/carrinho': typeof ClienteCarrinhoRoute
  '/cliente/checkout': typeof ClienteCheckoutRoute
  '/cliente/loja': typeof ClienteLojaRoute
  '/cliente/pedidos': typeof ClientePedidosRoute
  '/cliente/perfil': typeof ClientePerfilRoute
  '/cliente/produtos': typeof ClienteProdutosRoute
  '/funcionario/caixa': typeof FuncionarioCaixaRoute
  '/funcionario/pdv': typeof FuncionarioPdvRoute
  '/funcionario/vendas': typeof FuncionarioVendasRoute
  '/supervisor/funcionarios': typeof SupervisorFuncionariosRoute
  '/supervisor/operacoes': typeof SupervisorOperacoesRoute
  '/admin': typeof AdminIndexRoute
  '/autoatendimento': typeof AutoatendimentoIndexRoute
  '/cliente': typeof ClienteIndexRoute
  '/funcionario': typeof FuncionarioIndexRoute
  '/supervisor': typeof SupervisorIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cadastro': typeof CadastroRoute
  '/login': typeof LoginRoute
  '/admin/configuracoes': typeof AdminConfiguracoesRoute
  '/admin/financeiro': typeof AdminFinanceiroRoute
  '/admin/funcionarios': typeof AdminFuncionariosRoute
  '/admin/produtos': typeof AdminProdutosRoute
  '/admin/vendas': typeof AdminVendasRoute
  '/cliente/cadastro': typeof ClienteCadastroRoute
  '/cliente/carrinho': typeof ClienteCarrinhoRoute
  '/cliente/checkout': typeof ClienteCheckoutRoute
  '/cliente/loja': typeof ClienteLojaRoute
  '/cliente/pedidos': typeof ClientePedidosRoute
  '/cliente/perfil': typeof ClientePerfilRoute
  '/cliente/produtos': typeof ClienteProdutosRoute
  '/funcionario/caixa': typeof FuncionarioCaixaRoute
  '/funcionario/pdv': typeof FuncionarioPdvRoute
  '/funcionario/vendas': typeof FuncionarioVendasRoute
  '/supervisor/funcionarios': typeof SupervisorFuncionariosRoute
  '/supervisor/operacoes': typeof SupervisorOperacoesRoute
  '/admin': typeof AdminIndexRoute
  '/autoatendimento': typeof AutoatendimentoIndexRoute
  '/cliente': typeof ClienteIndexRoute
  '/funcionario': typeof FuncionarioIndexRoute
  '/supervisor': typeof SupervisorIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cadastro': typeof CadastroRoute
  '/login': typeof LoginRoute
  '/admin/configuracoes': typeof AdminConfiguracoesRoute
  '/admin/financeiro': typeof AdminFinanceiroRoute
  '/admin/funcionarios': typeof AdminFuncionariosRoute
  '/admin/produtos': typeof AdminProdutosRoute
  '/admin/vendas': typeof AdminVendasRoute
  '/cliente/cadastro': typeof ClienteCadastroRoute
  '/cliente/carrinho': typeof ClienteCarrinhoRoute
  '/cliente/checkout': typeof ClienteCheckoutRoute
  '/cliente/loja': typeof ClienteLojaRoute
  '/cliente/pedidos': typeof ClientePedidosRoute
  '/cliente/perfil': typeof ClientePerfilRoute
  '/cliente/produtos': typeof ClienteProdutosRoute
  '/funcionario/caixa': typeof FuncionarioCaixaRoute
  '/funcionario/pdv': typeof FuncionarioPdvRoute
  '/funcionario/vendas': typeof FuncionarioVendasRoute
  '/supervisor/funcionarios': typeof SupervisorFuncionariosRoute
  '/supervisor/operacoes': typeof SupervisorOperacoesRoute
  '/admin/': typeof AdminIndexRoute
  '/autoatendimento/': typeof AutoatendimentoIndexRoute
  '/cliente/': typeof ClienteIndexRoute
  '/funcionario/': typeof FuncionarioIndexRoute
  '/supervisor/': typeof SupervisorIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/cadastro'
    | '/login'
    | '/admin/configuracoes'
    | '/admin/financeiro'
    | '/admin/funcionarios'
    | '/admin/produtos'
    | '/admin/vendas'
    | '/cliente/cadastro'
    | '/cliente/carrinho'
    | '/cliente/checkout'
    | '/cliente/loja'
    | '/cliente/pedidos'
    | '/cliente/perfil'
    | '/cliente/produtos'
    | '/funcionario/caixa'
    | '/funcionario/pdv'
    | '/funcionario/vendas'
    | '/supervisor/funcionarios'
    | '/supervisor/operacoes'
    | '/admin'
    | '/autoatendimento'
    | '/cliente'
    | '/funcionario'
    | '/supervisor'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/cadastro'
    | '/login'
    | '/admin/configuracoes'
    | '/admin/financeiro'
    | '/admin/funcionarios'
    | '/admin/produtos'
    | '/admin/vendas'
    | '/cliente/cadastro'
    | '/cliente/carrinho'
    | '/cliente/checkout'
    | '/cliente/loja'
    | '/cliente/pedidos'
    | '/cliente/perfil'
    | '/cliente/produtos'
    | '/funcionario/caixa'
    | '/funcionario/pdv'
    | '/funcionario/vendas'
    | '/supervisor/funcionarios'
    | '/supervisor/operacoes'
    | '/admin'
    | '/autoatendimento'
    | '/cliente'
    | '/funcionario'
    | '/supervisor'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/cadastro'
    | '/login'
    | '/admin/configuracoes'
    | '/admin/financeiro'
    | '/admin/funcionarios'
    | '/admin/produtos'
    | '/admin/vendas'
    | '/cliente/cadastro'
    | '/cliente/carrinho'
    | '/cliente/checkout'
    | '/cliente/loja'
    | '/cliente/pedidos'
    | '/cliente/perfil'
    | '/cliente/produtos'
    | '/funcionario/caixa'
    | '/funcionario/pdv'
    | '/funcionario/vendas'
    | '/supervisor/funcionarios'
    | '/supervisor/operacoes'
    | '/admin/'
    | '/autoatendimento/'
    | '/cliente/'
    | '/funcionario/'
    | '/supervisor/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  CadastroRoute: typeof CadastroRoute
  LoginRoute: typeof LoginRoute
  AdminConfiguracoesRoute: typeof AdminConfiguracoesRoute
  AdminFinanceiroRoute: typeof AdminFinanceiroRoute
  AdminFuncionariosRoute: typeof AdminFuncionariosRoute
  AdminProdutosRoute: typeof AdminProdutosRoute
  AdminVendasRoute: typeof AdminVendasRoute
  ClienteCadastroRoute: typeof ClienteCadastroRoute
  ClienteCarrinhoRoute: typeof ClienteCarrinhoRoute
  ClienteCheckoutRoute: typeof ClienteCheckoutRoute
  ClienteLojaRoute: typeof ClienteLojaRoute
  ClientePedidosRoute: typeof ClientePedidosRoute
  ClientePerfilRoute: typeof ClientePerfilRoute
  ClienteProdutosRoute: typeof ClienteProdutosRoute
  FuncionarioCaixaRoute: typeof FuncionarioCaixaRoute
  FuncionarioPdvRoute: typeof FuncionarioPdvRoute
  FuncionarioVendasRoute: typeof FuncionarioVendasRoute
  SupervisorFuncionariosRoute: typeof SupervisorFuncionariosRoute
  SupervisorOperacoesRoute: typeof SupervisorOperacoesRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AutoatendimentoIndexRoute: typeof AutoatendimentoIndexRoute
  ClienteIndexRoute: typeof ClienteIndexRoute
  FuncionarioIndexRoute: typeof FuncionarioIndexRoute
  SupervisorIndexRoute: typeof SupervisorIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  CadastroRoute: CadastroRoute,
  LoginRoute: LoginRoute,
  AdminConfiguracoesRoute: AdminConfiguracoesRoute,
  AdminFinanceiroRoute: AdminFinanceiroRoute,
  AdminFuncionariosRoute: AdminFuncionariosRoute,
  AdminProdutosRoute: AdminProdutosRoute,
  AdminVendasRoute: AdminVendasRoute,
  ClienteCadastroRoute: ClienteCadastroRoute,
  ClienteCarrinhoRoute: ClienteCarrinhoRoute,
  ClienteCheckoutRoute: ClienteCheckoutRoute,
  ClienteLojaRoute: ClienteLojaRoute,
  ClientePedidosRoute: ClientePedidosRoute,
  ClientePerfilRoute: ClientePerfilRoute,
  ClienteProdutosRoute: ClienteProdutosRoute,
  FuncionarioCaixaRoute: FuncionarioCaixaRoute,
  FuncionarioPdvRoute: FuncionarioPdvRoute,
  FuncionarioVendasRoute: FuncionarioVendasRoute,
  SupervisorFuncionariosRoute: SupervisorFuncionariosRoute,
  SupervisorOperacoesRoute: SupervisorOperacoesRoute,
  AdminIndexRoute: AdminIndexRoute,
  AutoatendimentoIndexRoute: AutoatendimentoIndexRoute,
  ClienteIndexRoute: ClienteIndexRoute,
  FuncionarioIndexRoute: FuncionarioIndexRoute,
  SupervisorIndexRoute: SupervisorIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/cadastro",
        "/login",
        "/admin/configuracoes",
        "/admin/financeiro",
        "/admin/funcionarios",
        "/admin/produtos",
        "/admin/vendas",
        "/cliente/cadastro",
        "/cliente/carrinho",
        "/cliente/checkout",
        "/cliente/loja",
        "/cliente/pedidos",
        "/cliente/perfil",
        "/cliente/produtos",
        "/funcionario/caixa",
        "/funcionario/pdv",
        "/funcionario/vendas",
        "/supervisor/funcionarios",
        "/supervisor/operacoes",
        "/admin/",
        "/autoatendimento/",
        "/cliente/",
        "/funcionario/",
        "/supervisor/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/cadastro": {
      "filePath": "cadastro.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/admin/configuracoes": {
      "filePath": "admin/configuracoes.tsx"
    },
    "/admin/financeiro": {
      "filePath": "admin/financeiro.tsx"
    },
    "/admin/funcionarios": {
      "filePath": "admin/funcionarios.tsx"
    },
    "/admin/produtos": {
      "filePath": "admin/produtos.tsx"
    },
    "/admin/vendas": {
      "filePath": "admin/vendas.tsx"
    },
    "/cliente/cadastro": {
      "filePath": "cliente/cadastro.tsx"
    },
    "/cliente/carrinho": {
      "filePath": "cliente/carrinho.tsx"
    },
    "/cliente/checkout": {
      "filePath": "cliente/checkout.tsx"
    },
    "/cliente/loja": {
      "filePath": "cliente/loja.tsx"
    },
    "/cliente/pedidos": {
      "filePath": "cliente/pedidos.tsx"
    },
    "/cliente/perfil": {
      "filePath": "cliente/perfil.tsx"
    },
    "/cliente/produtos": {
      "filePath": "cliente/produtos.tsx"
    },
    "/funcionario/caixa": {
      "filePath": "funcionario/caixa.tsx"
    },
    "/funcionario/pdv": {
      "filePath": "funcionario/pdv.tsx"
    },
    "/funcionario/vendas": {
      "filePath": "funcionario/vendas.tsx"
    },
    "/supervisor/funcionarios": {
      "filePath": "supervisor/funcionarios.tsx"
    },
    "/supervisor/operacoes": {
      "filePath": "supervisor/operacoes.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    },
    "/autoatendimento/": {
      "filePath": "autoatendimento/index.tsx"
    },
    "/cliente/": {
      "filePath": "cliente/index.tsx"
    },
    "/funcionario/": {
      "filePath": "funcionario/index.tsx"
    },
    "/supervisor/": {
      "filePath": "supervisor/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
